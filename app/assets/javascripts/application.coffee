# This is a manifest file that'll be compiled into application.js, which will include all the files
# listed below.
#
# Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
# or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
#
# It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
# compiled file.
#
# Read Sprockets README (https:#github.com/sstephenson/sprockets#sprockets-directives) for details
# about supported directives.
#
#= require jquery
#= require jquery_ujs
# require turbolinks
#= require jquery
#= require bootstrap-sprockets
#= require moment
#= require select2
#= require smalot-bootstrap-datetimepicker

$ -> 
  $('[data-toggle="popover"]').popover()
  $('[data-toggle="tooltip"]').tooltip()

  # dont forget to keep this in sync with the nl.yml localisation
  $('input.datetime').datetimepicker
    format: "dd-mm-yyyy hh:ii",
    showMeridian: false,
    autoclose: true,
    todayBtn: true,
    maxView: 1

  $('input.date').datetimepicker
    format: 'dd-mm-yyyy'
    autoclose: true
    todayBtn: true
    startView: 4
    maxView: 4
    minView: 2



this.attachHandlers = ($el) ->

  $('.datetimepicker', $el).datetimepicker 
    format: 'YYYY-MM-DD HH:mm', 
    sideBySide: true

  $('.datepicker', $el).datetimepicker 
    format: 'YYYY-MM-DD'

  $('.select2', $el).select2()

  $('.select2remote', $el).select2
    ajax:
      url: ->
        this.data('remote')
      dataType: 'json'
      quietMillis: 250
      data: (term, page) ->
        { q: term }
      results: (data, page) ->
        # parse the results into the format expected by Select2.
        # since we are using custom formatting functions we do not need to alter the remote JSON data
        { results: data }
      cache: true
    initSelection: (element, callback) ->
      # the input tag has a value attribute preloaded that points to a preselected repository's id
      # this function resolves that id attribute to an object that select2 can render
      # using its formatResult renderer - that way the repository name is shown preselected
      id = $(element).val()
      if id != ''
        $.ajax( $(element).data('remote') + '?id=' + id, dataType: 'json').done (data) ->
          if( data.length == 1 )
            callback data[0]
          else
            callback {}
          return
      return
    formatResult: (row) ->
      row.name
    formatSelection:  (row) ->
      row.name
    escapeMarkup: (m) ->
      m

$ ->
  attachHandlers( $('body') )

  # $('#products').dataTable
  #   sPaginationType: "full_numbers"
  #   bJQueryUI: true
  #   bProcessing: true
  #   bServerSide: true
  #   sAjaxSource: $('#products').data('source')
  

# ---
# generated by js2coffee 2.0.1
    
  # # instantiate the bloodhound suggestion engine
  # projects = new Bloodhound(
  #   datumTokenizer: Bloodhound.tokenizers.obj.whitespace('num')
  #   queryTokenizer: Bloodhound.tokenizers.whitespace
  #   prefetch: '/hours/projects.json'
  #   remote: '/hours/projects.json?q=%QUERY'
  # )
  
  # # initialize the bloodhound suggestion engine
  # projects.initialize()

  # # instantiate the typeahead UI
  # $('.typeahead').typeahead null,
  #   source: projects.ttAdapter()
  #   displayKey: 'name'
